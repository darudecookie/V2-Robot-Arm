// generated from rosidl_adapter/resource/srv.idl.em
// with input from v2_robot_arm_interfaces/srv/MicrocontrollerParameterDump.srv
// generated code does not contain a copyright notice


module v2_robot_arm_interfaces {
  module srv {
    typedef float float__2[2];
    typedef float float__3[3];
    typedef float float__7[7];
    struct MicrocontrollerParameterDump_Request {
      @default (value=-10)
      int16 joint_position_limit_update_target;

      @default (value="(0.0, 0.0)")
      float__2 joint_position_limit_update_params;

      @default (value=-10)
      int16 joint_velocity_limit_update_target;

      @default (value="(0.0, 0.0)")
      float__2 joint_velocity_limit_update_params;

      @default (value=-10)
      int16 joint_torque_limit_update_target;

      @default (value="(0.0, 0.0)")
      float__2 joint_torque_limit_update_params;

      @default (value=-10)
      int16 joint_acceleration_limit_update_target;

      @default (value="(0.0, 0.0)")
      float__2 joint_acceleration_limit_update_params;

      @default (value=-10)
      int16 joint_jerk_limit_update_target;

      @default (value="(0.0, 0.0)")
      float__2 joint_jerk_limit_update_params;

      @default (value="(-1.0, -1.0)")
      float__2 x_workspace_bounds;

      @default (value="(-1.0, -1.0)")
      float__2 y_workspace_bounds;

      @default (value="(-1.0, -1.0)")
      float__2 z_workspace_bounds;

      @default (value=-10)
      int16 pid_update_target;

      @default (value="(-1.0, -1.0, -1.0)")
      float__3 pid_update_params;

      @default (value="(-100.0, -100.0, -100.0, -100.0, -100.0, -100.0, -100.0)")
      float__7 joint_home_positions;
    };
    struct MicrocontrollerParameterDump_Response {
      int8 returnsuccess;
    };
  };
};
